.TH "ICommand" 3 "Thu Aug 30 2018" "esc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ICommand \- Command Interface\&. Base class for all command\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <interfaces\&.h>\fP
.PP
Inherited by \fBIBlockCommand\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual int \fBgetType\fP ()=0"
.br
.RI "\fIGet type\&. \fP"
.ti -1c
.RI "virtual CommandType \fBgetCommandType\fP ()=0"
.br
.RI "\fIGet command type\&. \fP"
.ti -1c
.RI "virtual unsigned char * \fBgetData\fP ()=0"
.br
.RI "\fIGet pointer to command data structure\&. \fP"
.ti -1c
.RI "virtual unsigned char * \fBgetAdditionalData\fP ()=0"
.br
.RI "\fIGet additional data\&. \fP"
.ti -1c
.RI "virtual unsigned char * \fBgetResponse\fP ()=0"
.br
.RI "\fIGet pointer to response data\&. \fP"
.ti -1c
.RI "virtual void \fBsetData\fP (char *data)=0"
.br
.RI "\fIPut data as a char list and put convert it to data structure\&. \fP"
.ti -1c
.RI "virtual void \fBsetResponse\fP (char *data)=0"
.br
.RI "\fIApply data as a response struct\&. \fP"
.ti -1c
.RI "virtual int \fBgetDataSize\fP ()=0"
.br
.RI "\fIGet data struct size\&. Without signature\&. \fP"
.ti -1c
.RI "virtual int \fBgetResponseSize\fP ()=0"
.br
.RI "\fIGet response data struct size\&. \fP"
.ti -1c
.RI "virtual int \fBgetAdditionalDataSize\fP ()=0"
.br
.RI "\fIGet additional data size\&. \fP"
.ti -1c
.RI "virtual unsigned char * \fBgetSignature\fP ()=0"
.br
.RI "\fIGet pointer to signature data\&. \fP"
.ti -1c
.RI "virtual int \fBgetSignatureSize\fP ()=0"
.br
.RI "\fIGet signature size\&. \fP"
.ti -1c
.RI "virtual void \fBsign\fP (const uint8_t *hash, const uint8_t *sk, const uint8_t *pk)=0"
.br
.RI "\fISign actual data plus hash using user private and public keys\&. \fP"
.ti -1c
.RI "virtual bool \fBcheckSignature\fP (const uint8_t *hash, const uint8_t *pk)=0"
.br
.RI "\fICheck actual signature\&. \fP"
.ti -1c
.RI "virtual uint32_t \fBgetTime\fP ()=0"
.br
.RI "\fIGet time of command\&. \fP"
.ti -1c
.RI "virtual uint32_t \fBgetUserId\fP ()=0"
.br
.RI "\fIGet User ID\&. \fP"
.ti -1c
.RI "virtual uint32_t \fBgetBankId\fP ()=0"
.br
.RI "\fIGet Node ID\&. \fP"
.ti -1c
.RI "virtual int64_t \fBgetFee\fP ()=0"
.br
.RI "\fIGet command fee\&. \fP"
.ti -1c
.RI "virtual int64_t \fBgetDeduct\fP ()=0"
.br
.RI "\fIGet change in cash balance after command\&. \fP"
.ti -1c
.RI "virtual unsigned char * \fBgetBlockMessage\fP ()=0"
.br
.RI "\fIGet data as it is stored in blockchain\&. \fP"
.ti -1c
.RI "virtual size_t \fBgetBlockMessageSize\fP ()=0"
.br
.RI "\fIGet blockchain data size\&. \fP"
.ti -1c
.RI "virtual uint32_t \fBgetUserMessageId\fP ()=0"
.br
.RI "\fIGet user message id\&. \fP"
.ti -1c
.RI "virtual bool \fBsend\fP (\fBINetworkClient\fP &netClient)=0"
.br
.RI "\fISend data to the server\&. \fP"
.ti -1c
.RI "virtual void \fBsaveResponse\fP (\fBsettings\fP &sts)=0"
.br
.RI "\fISave command response to settings object\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBErrorCodes::Code\fP \fBm_responseError\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Command Interface\&. Base class for all command\&. 
.PP
Definition at line 44 of file interfaces\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual bool ICommand::checkSignature (const uint8_t * hash, const uint8_t * pk)\fC [pure virtual]\fP"

.PP
Check actual signature\&. 
.PP
\fBParameters:\fP
.RS 4
\fIhash\fP Previous hash operation\&. 
.br
\fIpk\fP Pointer to public key\&. 
.RE
.PP

.PP
Implemented in \fBBroadcastMsg\fP, \fBGetBroadcastMsg\fP, \fBGetLog\fP, \fBGetBlock\fP, \fBSetAccountKey\fP, \fBSendMany\fP, \fBCreateAccount\fP, \fBGetAccount\fP, \fBGetAccounts\fP, \fBSetNodeStatus\fP, \fBUnsetNodeStatus\fP, \fBCreateNode\fP, \fBGetBlocks\fP, \fBChangeNodeKey\fP, \fBGetSignatures\fP, \fBGetMessage\fP, \fBLogAccount\fP, \fBRetrieveFunds\fP, \fBSetAccountStatus\fP, \fBUnsetAccountStatus\fP, \fBGetMessageList\fP, \fBGetTransaction\fP, \fBGetVipKeys\fP, \fBConnected\fP, \fBSendOne\fP, \fBGetFields\fP, \fBTransactionAccepted\fP, and \fBTransactionFailed\fP\&.
.SS "virtual bool ICommand::send (\fBINetworkClient\fP & netClient)\fC [pure virtual]\fP"

.PP
Send data to the server\&. 
.PP
\fBParameters:\fP
.RS 4
\fInetClient\fP Netwrok client implementation of \fBINetworkClient\fP interface\&. 
.br
\fIpk\fP Pointer to public key\&. 
.RE
.PP

.PP
Implemented in \fBBroadcastMsg\fP, \fBGetBlock\fP, \fBGetBroadcastMsg\fP, \fBGetLog\fP, \fBLogAccount\fP, \fBSetAccountKey\fP, \fBSendMany\fP, \fBGetAccount\fP, \fBGetAccounts\fP, \fBSetNodeStatus\fP, \fBUnsetNodeStatus\fP, \fBGetBlocks\fP, \fBChangeNodeKey\fP, \fBCreateAccount\fP, \fBGetSignatures\fP, \fBCreateNode\fP, \fBGetMessage\fP, \fBRetrieveFunds\fP, \fBSendOne\fP, \fBSetAccountStatus\fP, \fBUnsetAccountStatus\fP, \fBGetMessageList\fP, \fBGetTransaction\fP, \fBGetVipKeys\fP, \fBConnected\fP, \fBTransactionAccepted\fP, \fBTransactionFailed\fP, and \fBGetFields\fP\&.
.SS "virtual void ICommand::sign (const uint8_t * hash, const uint8_t * sk, const uint8_t * pk)\fC [pure virtual]\fP"

.PP
Sign actual data plus hash using user private and public keys\&. 
.PP
\fBParameters:\fP
.RS 4
\fIhash\fP Previous hash operation\&. 
.br
\fIsk\fP Pointer to provate key\&. 
.br
\fIpk\fP Pointer to public key\&. 
.RE
.PP

.PP
Implemented in \fBBroadcastMsg\fP, \fBGetBroadcastMsg\fP, \fBGetLog\fP, \fBGetBlock\fP, \fBSetAccountKey\fP, \fBSendMany\fP, \fBCreateAccount\fP, \fBGetAccount\fP, \fBGetAccounts\fP, \fBSetNodeStatus\fP, \fBUnsetNodeStatus\fP, \fBCreateNode\fP, \fBGetBlocks\fP, \fBChangeNodeKey\fP, \fBGetSignatures\fP, \fBGetMessage\fP, \fBLogAccount\fP, \fBRetrieveFunds\fP, \fBSetAccountStatus\fP, \fBUnsetAccountStatus\fP, \fBGetMessageList\fP, \fBGetTransaction\fP, \fBGetVipKeys\fP, \fBConnected\fP, \fBSendOne\fP, \fBGetFields\fP, \fBTransactionAccepted\fP, and \fBTransactionFailed\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for esc from the source code\&.
