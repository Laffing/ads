.TH "Helper" 3 "Thu Aug 30 2018" "esc" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Helper \- TODO: uncomment logs when new log mechanism done\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBblg_bky_t\fP"
.br
.ti -1c
.RI "struct \fBblg_bnk_t\fP"
.br
.ti -1c
.RI "struct \fBblg_get_t\fP"
.br
.ti -1c
.RI "struct \fBblg_sbs_t\fP"
.br
.ti -1c
.RI "struct \fBblg_ubs_t\fP"
.br
.ti -1c
.RI "struct \fBblg_uok_t\fP"
.br
.ti -1c
.RI "struct \fBblg_uso_t\fP"
.br
.ti -1c
.RI "struct \fBblg_usr_t\fP"
.br
.ti -1c
.RI "class \fBBlock\fP"
.br
.ti -1c
.RI "class \fBBlockFileReader\fP"
.br
.RI "\fIClass to read file directly from archive without extracting\&. Note that you can use it also for read regular file, just put as argument file without \&.arch extension\&. \fP"
.ti -1c
.RI "class \fBFileWrapper\fP"
.br
.RI "\fIRAII File descriptor wrapper, allows to close and optionally remove file in destructor\&. \fP"
.ti -1c
.RI "struct \fBHashDoubleVariant\fP"
.br
.ti -1c
.RI "struct \fBHashSingleVariant\fP"
.br
.ti -1c
.RI "class \fBHlog\fP"
.br
.ti -1c
.RI "class \fBLibArchive\fP"
.br
.RI "\fILibrary to create and read archive with file index in header\&. \fP"
.ti -1c
.RI "class \fBServers\fP"
.br
.ti -1c
.RI "struct \fBServersHeader\fP"
.br
.ti -1c
.RI "struct \fBServersNode\fP"
.br
.ti -1c
.RI "struct \fBSignature\fP"
.br
.ti -1c
.RI "class \fBSignatures\fP"
.br
.ti -1c
.RI "class \fBVipKeys\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBed25519_printkey\fP (uint8_t *key, int len)"
.br
.ti -1c
.RI "void \fBed25519_text2key\fP (uint8_t *key, const char *text, int len)"
.br
.ti -1c
.RI "void \fBed25519_key2text\fP (char *text, const uint8_t *key, int len)"
.br
.ti -1c
.RI "void \fBed25519_key2text\fP (std::stringstream &text, const uint8_t *key, int len)"
.br
.ti -1c
.RI "std::string \fBed25519_key2text\fP (const uint8_t *key, int len)"
.br
.ti -1c
.RI "void \fBtext2key\fP (const std::string &key, std::string &text)"
.br
.ti -1c
.RI "void \fBarch_old_blocks\fP (uint32_t currentTime)"
.br
.RI "\fICompress old blocks,\&. \fP"
.ti -1c
.RI "void \fBremove_block\fP (const char *blockPath)"
.br
.RI "\fIRemoves block from filesystem\&. \fP"
.ti -1c
.RI "void \fBremove_block_exclude\fP (const char *blockPath, const char *excludeDir)"
.br
.RI "\fIRemoves files from block path, except directory set as exclude_dir\&. \fP"
.ti -1c
.RI "void \fBremove_file\fP (const char *filename)"
.br
.RI "\fIremoves file \fP"
.ti -1c
.RI "bool \fBis_file_not_compressed\fP (const char *filePath)"
.br
.RI "\fICheck is file exists in not compressed block\&. \fP"
.ti -1c
.RI "bool \fBis_snapshot_directory\fP (uint32_t blockTime)"
.br
.RI "\fICheck is it directory for snapshot or not\&. \fP"
.ti -1c
.RI "uint32_t \fBget_users_count\fP (uint16_t bank)"
.br
.ti -1c
.RI "void \fBdb_backup\fP (uint32_t block_path, uint16_t nodes)"
.br
.ti -1c
.RI "uint16_t \fBcrc16\fP (const uint8_t *data_p, uint8_t length)"
.br
.ti -1c
.RI "uint16_t \fBcrc_acnt\fP (uint16_t \fBnode\fP, uint32_t user)"
.br
.ti -1c
.RI "void \fBcreate256signhash\fP (const unsigned char *signature, int signSize, std::array< uint8_t, SHA256_DIGEST_LENGTH > ha, std::array< uint8_t, SHA256_DIGEST_LENGTH > &hashout)"
.br
.ti -1c
.RI "void \fBcreate256signhash\fP (const unsigned char *signature, int signatureSize, const unsigned char *previosHash, std::array< uint8_t, SHA256_DIGEST_LENGTH > &hashout)"
.br
.ti -1c
.RI "void \fBcreate256signhash\fP (const unsigned char *signature, int signSize, const unsigned char *previosHash, unsigned char hashout[SHA256_DIGEST_LENGTH])"
.br
.ti -1c
.RI "void \fBcreate256signhash\fP (const std::array< uint8_t, SHA256_DIGEST_LENGTH > signature, const std::array< uint8_t, SHA256_DIGEST_LENGTH > ha, std::array< uint8_t, SHA256_DIGEST_LENGTH > &hashout)"
.br
.ti -1c
.RI "void \fBprint_user\fP (\fBuser_t\fP &u, boost::property_tree::ptree &pt, bool local, uint32_t bank, uint32_t user)"
.br
.ti -1c
.RI "void \fBprint_msgid_info\fP (boost::property_tree::ptree &pt, uint16_t \fBnode\fP, uint32_t msid, uint32_t mpos)"
.br
.ti -1c
.RI "bool \fBparse_amount\fP (int64_t &amount, std::string str_amount)"
.br
.ti -1c
.RI "char * \fBprint_amount\fP (int64_t amount)"
.br
.ti -1c
.RI "char * \fBmydate\fP (uint32_t now)"
.br
.ti -1c
.RI "int \fBcheck_csum\fP (\fBuser_t\fP &u, uint16_t \fBpeer\fP, uint32_t uid)"
.br
.ti -1c
.RI "void \fBprintErrorJson\fP (const char *errorMsg, bool pretty)"
.br
.ti -1c
.RI "const std::string \fBprint_address\fP (uint16_t \fBnode\fP, uint32_t user, int32_t _suffix)"
.br
.ti -1c
.RI "const std::string \fBprint_msg_id\fP (uint16_t \fBnode\fP, uint32_t user, int32_t _suffix)"
.br
.ti -1c
.RI "const std::string \fBprint_msg_pack_id\fP (uint16_t \fBnode\fP, uint32_t msg_id)"
.br
.ti -1c
.RI "void \fBprint_log\fP (boost::property_tree::ptree &pt, uint16_t bank, uint32_t user, uint32_t lastlog, int txnType=\-1)"
.br
.ti -1c
.RI "void \fBsave_log\fP (\fBlog_t\fP *log, int len, uint32_t from, uint16_t bank, uint32_t user)"
.br
.ti -1c
.RI "void \fBprint_all_commands_help\fP ()"
.br
.ti -1c
.RI "int \fBgetLogTxnTypeId\fP (const char *txnName)"
.br
.ti -1c
.RI "struct \fBHelper::ServersNode\fP \fB__attribute__\fP ((packed))"
.br
.ti -1c
.RI "void \fBsetSocketTimeout\fP (boost::asio::ip::tcp::socket &socket, unsigned int timeout, unsigned int idletimeout, unsigned int maxtry)"
.br
.ti -1c
.RI "void \fBsetSocketTimeout\fP (std::unique_ptr< boost::asio::ip::tcp::socket > &socket, unsigned int timeout, unsigned int idletimeout, unsigned int maxtry)"
.br
.ti -1c
.RI "void \fBsetSocketNoDelay\fP (boost::asio::ip::tcp::socket &socket, bool noDelay)"
.br
.ti -1c
.RI "void \fBsetSocketNoDelay\fP (std::unique_ptr< boost::asio::ip::tcp::socket > &socket, bool noDelay)"
.br
.ti -1c
.RI "int \fBgetTxnTypeId\fP (const char *txnName)"
.br
.ti -1c
.RI "int \fBgetTxnLogTypeId\fP (const char *txnName)"
.br
.ti -1c
.RI "const char * \fBgetTxnName\fP (int id)"
.br
.ti -1c
.RI "const char * \fBgetTxnLogName\fP (int id)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "boost::mutex \fBblocklock\fP"
.br
.ti -1c
.RI "const int \fBSIZE_OF_JUMP_FIELD\fP = sizeof(uint32_t)"
.br
.ti -1c
.RI "const char *const \fBARCH_EXTENSION\fP = '\&.arch'"
.br
.ti -1c
.RI "class \fBHelper::Servers\fP \fB__attribute__\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
TODO: uncomment logs when new log mechanism done\&. 

Archive file format 218B file:header.hdr 4B Jump position to servers\&.srv 4B Jump position to signatures\&.ok 4B Jump position to signatures\&.no 4B Jump position to hlog\&.hlg 4B Jump position to msglist\&.dat *** for each *\&.msg file 4B Jump to *\&.msg file 
.PP
 file:servers.srv file:signatures.ok file:signatures.no file:hlog.hlg file:msglist.dat *** for each *\&.msg file file:*\&.msg 
.PP
 
.SH "Function Documentation"
.PP 
.SS "void Helper::arch_old_blocks (uint32_t currentTime)"

.PP
Compress old blocks,\&. 
.PP
\fBSee also:\fP
.RS 4
BLOCKS_COMPRESSED_SHIFT \&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIcurrentTime\fP - decimal current block start value 
.RE
.PP

.PP
Definition at line 23 of file blocks\&.cpp\&.
.SS "bool Helper::is_file_not_compressed (const char * filePath)"

.PP
Check is file exists in not compressed block\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfilePath\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
true if exists (not compressed yet), otherwise false\&. 
.RE
.PP

.PP
Definition at line 80 of file blocks\&.cpp\&.
.SS "void Helper::remove_block (const char * blockPath)"

.PP
Removes block from filesystem\&. 
.PP
\fBParameters:\fP
.RS 4
\fIblockPath\fP - path to block directory in filesystem 
.RE
.PP

.PP
Definition at line 54 of file blocks\&.cpp\&.
.SS "void Helper::remove_block_exclude (const char * blockPath, const char * excludeDir)"

.PP
Removes files from block path, except directory set as exclude_dir\&. 
.PP
\fBParameters:\fP
.RS 4
\fIblockPath\fP - path to block directory in filesystem 
.br
\fIexcludeDir\fP - path to directory skip during remove 
.RE
.PP

.PP
Definition at line 60 of file blocks\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for esc from the source code\&.
